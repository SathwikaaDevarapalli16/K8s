apiVersion: apps/v1 # Spring app Deployment
kind: Deployment
metadata:
  name: springapp
  namespace: test-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      name: springapp
      labels:
        app: springapp
    spec:
      containers:
      - name: springapp
        image: salapalalokesh/springboot-mongo:latest
        ports:
        - containerPort: 8080
        resources:
            requests:
              cpu: "500m"
              memory: "256Mi"
            limits:
              cpu: 1
              memory: "512Mi"
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
---
#Spring App Service
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
  labels:
    app: springapp
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30010
---
#Mongo DB ReplicationSet

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodb
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      name: mongodb
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
        volumeMounts:
        - name: mongovol
          mountPath: "/data/db"
      volumes:
      - name: mongovol
        persistentVolumeClaim:
          claimName: pvc
---
#Mongo DB Service

apiVersion: v1
kind: Service
metadata:
  name: mongosvc
  labels:
    app: mongodb
  namespace: test-ns
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc
  namespace: test-ns
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: springapp-network-policy
  namespace: test-ns
spec:
  podSelector:
    matchLabels:
      app: mongodb
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: default # to add ns kubectl label ns default name=default. If pod is in another namespace.
    - podSelector:
        matchLabels:
          app: springapp
    ports:
    - protocol: TCP
      port: 27017
